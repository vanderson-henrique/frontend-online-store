{"version":3,"sources":["img/kart.svg","img/Logo.svg","img/lupa-black.svg","components/SideBar.jsx","services/storageServices.js","components/Itens.jsx","components/KartItens.jsx","components/SearchInput.jsx","components/Header.jsx","components/Kart.jsx","components/ProductCard.jsx","services/api.js","components/ProductSpecs.jsx","components/FormRating.jsx","components/ProductDetail.jsx","components/PayProductReview.jsx","components/BuyerInfo.jsx","components/PayProductList.jsx","components/ProductList.jsx","components/InitialScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideBar","this","props","categories","onChangeCategorySelected","map","id","name","className","key","htmlFor","data-testid","type","value","onChange","Component","getProductsStorage","getProduct","localStorage","getItem","JSON","parse","delProductsStorage","productDel","a","elementsLocalStorage","filter","element","mapForDelete","clear","setItem","stringify","updateProductsStorage","productItem","updateProductAll","find","productTarget","qtt","setProductsStorage","product","setProductAll","some","push","length","getStorageKartItens","itensStorage","reduce","acc","valueActual","Itens","updateValue","bind","deleteProduct","operator","callback","storageServices","item","getStorageItens","setState","target","itemId","title","thumbnail","price","getKartItens","onClick","event","src","alt","React","KartItens","toFixed","to","SearchInput","searchInput","onInputSearchChange","buttonSearch","Lupa","defaultProps","Header","qttItemsKart","LogoImg","KartImg","KartList","state","message","ProductCard","addProductCart","addItem","subtitle","substring","getCategories","fetch","requestReturn","json","objectReturn","getProductsFromCategoryAndQuery","categoryId","query","ProductSpecs","FormRating","changeHandler","renderForm","email","userMessage","evaluationRate","rating","placeholder","min","max","ProductDetail","fetchDetails","fetchLocalStorage","loading","StorageServices","match","params","api","getDetail","results","itemOnStorage","checkIsExist","productId","elementSet","PayProductReview","kartProducts","totalValue","accumulator","currentValue","productKart","BuyerInfo","validInput","cpf","phone","cep","address","other","number","city","stateCountry","arrayState","Object","entries","forEach","document","getElementById","style","borderColor","divForm","getElementsByClassName","createElement","innerHTML","appendChild","PayProductList","getProductsKart","ProductList","products","InitialScreen","fetchProducts","fetchAPI","categorySelected","dataInputSearch","datacategorySelected","getProducts","tagMessage","App","exact","path","component","Kart","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.12c87de8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kart.af5956c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.c77a1b60.svg\";","module.exports = __webpack_public_path__ + \"static/media/lupa-black.a529e5ae.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SideBar extends Component {\n  render() {\n    const { categories, onChangeCategorySelected } = this.props;\n\n    return (\n      <div>\n        {categories.map(({ id, name }) => (\n          <div className=\"categories-itens\" key={ id }>\n            <label htmlFor={ id } data-testid=\"category\">\n              <input\n                name=\"option\"\n                id={ id }\n                type=\"radio\"\n                value={ name }\n                onChange={ onChangeCategorySelected }\n              />\n              {name}\n            </label>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nSideBar.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChangeCategorySelected: PropTypes.func.isRequired,\n};\n\nexport default SideBar;\n","export function getProductsStorage() {\n  const getProduct = localStorage.getItem('cart');\n  const productReturn = JSON.parse(getProduct);\n  return productReturn;\n}\n\nexport async function delProductsStorage(productDel) {\n  const elementsLocalStorage = await getProductsStorage();\n  if (productDel) {\n    const mapForDelete = await elementsLocalStorage\n      .filter((element) => element.id !== productDel.id);\n    await localStorage.clear();\n    await localStorage.setItem('cart', JSON.stringify([...mapForDelete]));\n  } else {\n    localStorage.clear();\n  }\n}\n\nexport function updateProductsStorage(productItem) {\n  let updateProductAll = [];\n  const elementsLocalStorage = getProductsStorage();\n  elementsLocalStorage.find((productTarget) => {\n    if (productTarget.id === productItem.id && productTarget.qtt !== productItem.qtt) {\n      productTarget.qtt = productItem.qtt;\n      return productItem;\n    }\n    return '';\n  });\n  updateProductAll = [...elementsLocalStorage];\n\n  localStorage.setItem('cart', JSON.stringify(updateProductAll));\n  updateProductAll = [];\n}\n\nexport function setProductsStorage(product) {\n  let setProductAll = [];\n  const elementsLocalStorage = getProductsStorage();\n\n  if (elementsLocalStorage !== null) {\n    const checkIdProduct = elementsLocalStorage\n      .some((productTarget) => productTarget.id === product.id);\n    // checkIdProduct ? setProductAll = [...elementsLocalStorage] : setProductAll = [...elementsLocalStorage, product];\n    if (checkIdProduct) {\n      setProductAll = [...elementsLocalStorage];\n    } else {\n      setProductAll = [...elementsLocalStorage, product];\n    }\n  } else {\n    setProductAll.push(product);\n  }\n\n  if (setProductAll.length) localStorage.setItem('cart', JSON.stringify(setProductAll));\n  setProductAll = [];\n}\n\nexport function getStorageKartItens() {\n  let itensStorage = getProductsStorage();\n  if (!itensStorage) itensStorage = [];\n  const zero = 0;\n  const qttItemsKart = itensStorage.map((product) => product.qtt)\n    .reduce((acc, valueActual) => acc + valueActual, zero);\n  return qttItemsKart;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as storageServices from '../services/storageServices';\n\nclass Itens extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateValue = this.updateValue.bind(this);\n    this.deleteProduct = this.deleteProduct.bind(this);\n  }\n\n  updateValue(operator, callback) {\n    const { updateProductsStorage } = storageServices;\n    const { item, getStorageItens } = this.props;\n\n    if (operator === 'sub') {\n      const operatorMin = 1;\n      if (item.qtt > operatorMin) item.qtt -= 1;\n      updateProductsStorage(item);\n    } else {\n      item.qtt += 1;\n      updateProductsStorage(item);\n    }\n    this.setState({});\n\n    callback();\n\n    getStorageItens();\n  }\n\n  async deleteProduct({ target }, callback) {\n    const { getStorageItens } = this.props;\n    const itemId = { id: target.id };\n    await storageServices.delProductsStorage(itemId);\n    this.setState({});\n    getStorageItens();\n    callback();\n  }\n\n  render() {\n    const { item: { id, title, thumbnail, price, qtt }, getKartItens } = this.props;\n    return (\n      <div>\n        <button\n          id={ id }\n          type=\"button\"\n          onClick={ (event) => this.deleteProduct(event, getKartItens) }\n        >\n          X\n        </button>\n        <h1 data-testid=\"shopping-cart-product-name\">{ title }</h1>\n        <img src={ thumbnail } alt={ title } />\n        <button\n          type=\"button\"\n          data-testid=\"product-decrease-quantity\"\n          onClick={ () => this.updateValue('sub', getKartItens) }\n        >\n          -\n        </button>\n        <span data-testid=\"shopping-cart-product-quantity\">\n          {`Quantidade: ${qtt}`}\n        </span>\n        <button\n          type=\"button\"\n          data-testid=\"product-increase-quantity\"\n          onClick={ () => this.updateValue('sum', getKartItens) }\n        >\n          +\n        </button>\n        <span>{`Preço: ${price}`}</span>\n      </div>\n    );\n  }\n}\n\nItens.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    qtt: PropTypes.number.isRequired,\n  }).isRequired,\n  getStorageItens: PropTypes.func.isRequired,\n  getKartItens: PropTypes.func.isRequired,\n};\n\nexport default Itens;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Itens from './Itens';\n\nclass KartItens extends React.Component {\n  render() {\n    const { itensStorage, getStorageItens, getKartItens } = this.props;\n    const zero = 0;\n    const digitDotAfter = 2;\n    const value = itensStorage.map((product) => product.price * product.qtt)\n      .reduce((acc, valueActual) => acc + valueActual, zero);\n    return (\n      <div>\n        {itensStorage.map((item) => (\n          <Itens\n            key={ item.id }\n            item={ item }\n            getStorageItens={ getStorageItens }\n            getKartItens={ getKartItens }\n          />\n        ))}\n        <h1>{`Valor Final da Compra: R$${value.toFixed(digitDotAfter)}`}</h1>\n        <Link\n          data-testid=\"checkout-products\"\n          className=\"button-link\"\n          to=\"/pay\"\n        >\n          Finalizar Compra\n        </Link>\n      </div>\n    );\n  }\n}\n\nKartItens.propTypes = {\n  itensStorage: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getStorageItens: PropTypes.func.isRequired,\n  getKartItens: PropTypes.func.isRequired,\n};\n\nexport default KartItens;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Lupa from '../img/lupa-black.svg';\n\nclass SearchInput extends React.Component {\n  render() {\n    const { searchInput, onInputSearchChange, buttonSearch } = this.props;\n    return (\n      <div className=\"div-search\">\n        <input\n          className=\"input-search\"\n          data-testid=\"query-input\"\n          type=\"text\"\n          name=\"inputSearch\"\n          value={ searchInput }\n          onChange={ onInputSearchChange }\n        />\n        <button\n          className=\"button-search\"\n          data-testid=\"query-button\"\n          type=\"submit\"\n          onClick={ buttonSearch }\n        >\n          <img src={ Lupa } className=\"kart-icon\" alt=\"Botão carrinho de compras\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nSearchInput.defaultProps = {\n  searchInput: '',\n};\n\nSearchInput.propTypes = {\n  searchInput: PropTypes.string,\n  onInputSearchChange: PropTypes.func.isRequired,\n  buttonSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport KartImg from '../img/kart.svg';\nimport LogoImg from '../img/Logo.svg';\nimport SearchInput from './SearchInput';\n\nclass Header extends React.Component {\n  render() {\n    const { searchInput, onInputSearchChange, buttonSearch, qttItemsKart } = this.props;\n    return (\n      <header className=\"online-store-header\">\n        <Link to=\"/\">\n          <img src={ LogoImg } alt=\"Imagem da Logo\" />\n        </Link>\n        <SearchInput\n          searchInput={ searchInput }\n          onInputSearchChange={ onInputSearchChange }\n          buttonSearch={ buttonSearch }\n        />\n        <Link data-testid=\"shopping-cart-button\" to=\"/kart\">\n          <div className=\"qtt-items-kart\">\n            <img src={ KartImg } className=\"kart-icon\" alt=\"Botão carrinho de compras\" />\n            <div\n              className=\"qtt-items-kart\"\n              data-testid=\"shopping-cart-size\"\n            >\n              { qttItemsKart }\n            </div>\n          </div>\n        </Link>\n      </header>\n    );\n  }\n}\n\nHeader.defaultProps = {\n  searchInput: '',\n  onInputSearchChange: () => {},\n  buttonSearch: () => {},\n  qttItemsKart: 0,\n};\n\nHeader.propTypes = {\n  searchInput: PropTypes.string,\n  onInputSearchChange: PropTypes.func,\n  buttonSearch: PropTypes.func,\n  qttItemsKart: PropTypes.number,\n};\n\nexport default Header;\n","import React from 'react';\nimport KartItens from './KartItens';\nimport Header from './Header';\nimport * as storageServices from '../services/storageServices';\n\nclass KartList extends React.Component {\n  constructor() {\n    super();\n\n    this.getStorageItens = this.getStorageItens.bind(this);\n    this.getKartItens = this.getKartItens.bind(this);\n\n    this.state = {\n      message: 'Seu carrinho está vazio',\n      itensStorage: [],\n      qttItemsKart: storageServices.getStorageKartItens(),\n    };\n  }\n\n  componentDidMount() {\n    this.getStorageItens();\n  }\n\n  async getStorageItens() {\n    const itensStorage = await storageServices.getProductsStorage();\n    this.setState({ itensStorage });\n  }\n\n  getKartItens() {\n    const qttItemsKart = storageServices.getStorageKartItens();\n    this.setState({ qttItemsKart });\n  }\n\n\n  render() {\n    let { itensStorage } = this.state;\n    const { message, qttItemsKart } = this.state;\n    if (!itensStorage) {\n      itensStorage = storageServices.getProductsStorage();\n    }\n\n    return (\n      <div className=\"kart\">\n        <Header qttItemsKart={ qttItemsKart } />\n        {itensStorage ? (\n          <KartItens\n            itensStorage={ itensStorage }\n            getStorageItens={ this.getStorageItens }\n            getKartItens={ this.getKartItens }\n          />\n        ) : (\n          <h1 data-testid=\"shopping-cart-empty-message\">{message}</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default KartList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as storageServices from '../services/storageServices';\n\nclass ProductCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addProductCart = this.addProductCart.bind(this);\n  }\n\n  async addProductCart(callback) {\n    const { product } = this.props;\n    const { thumbnail, title, price, id } = product;\n    const addItem = {\n      id,\n      title,\n      thumbnail,\n      price,\n      qtt: 1,\n    };\n    await storageServices.setProductsStorage(addItem);\n    await callback();\n  }\n\n  render() {\n    const { product, getKartItens } = this.props;\n    const { thumbnail, title, price } = product;\n    const indexOne = 0;\n    const indexTwo = 8;\n    const subtitle = title.substring(indexOne, indexTwo);\n    return (\n      <div className=\"product-card\">\n        <Link data-testid=\"product-detail-link\" to={ `/detail/${subtitle}` }>\n          <div data-testid=\"product\" className=\"product-card-body\">\n            <img src={ thumbnail } alt=\"Imagem do produto\" className=\"product-card-img\" />\n            <h4 className=\"product-card-title\">{title}</h4>\n            <h3 className=\"product-card-price\">{`R$ ${price}`}</h3>\n          </div>\n        </Link>\n        <button\n          className=\"add-cart-button\"\n          type=\"button\"\n          data-testid=\"product-add-to-cart\"\n          id={ product }\n          onClick={ () => this.addProductCart(getKartItens) }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  product: PropTypes.shape({\n    thumbnail: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  getKartItens: PropTypes.func.isRequired,\n};\n\nexport default ProductCard;\n","export async function getCategories() {\n  const requestReturn = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const objectReturn = await requestReturn.json();\n  return objectReturn;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let requestReturn;\n  if (categoryId && query) {\n    requestReturn = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}_ID&q=${query}`);\n  } else if (categoryId) {\n    requestReturn = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`);\n  } else {\n    requestReturn = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${query}`);\n  }\n\n  const objectReturn = requestReturn.json();\n  return objectReturn;\n}\n\nexport async function getSpecsFromProduct(productId) {\n  const requestReturn = await fetch(`https://api.mercadolibre.com/items/${productId}`);\n  const objectReturn = await requestReturn.json();\n  return objectReturn;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProductSpecs extends React.Component {\n  render() {\n    const { title, price, thumbnail } = this.props;\n    return (\n      <div className=\"product-specs\">\n        <div className=\"product\">\n          <h3 className=\"product-specs-title\" data-testid=\"product-detail-name\">\n            <p data-testid=\"product-specs-name\">\n              {`${title} - R$ ${price}`}\n            </p>\n          </h3>\n          <img className=\"product-specs-img\" src={ thumbnail } alt=\"Imagem do produto\" />\n        </div>\n        <div className=\"product-specs-list\">\n          <ul>\n            <li>Especificação 01</li>\n            <li>Especificação 02</li>\n            <li>Especificação 03</li>\n            <li>Especificação 04</li>\n            <li>Especificação 05</li>\n            <li>Especificação 06</li>\n            <li>Especificação 07</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductSpecs.propTypes = {\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n};\n\nexport default ProductSpecs;\n","import React from 'react';\n\nclass FormRating extends React.Component {\n  constructor() {\n    super();\n    this.changeHandler = this.changeHandler.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.state = {\n      email: '',\n      userMessage: '',\n      evaluationRate: 1,\n    };\n  }\n\n  changeHandler({ target }) {\n    const { name } = target;\n    this.setState({ [name]: target.value });\n  }\n\n  renderForm({ changeHandler, userMessage, email, rating }) {\n    return (\n      <form className=\"evaluation-form\" id=\"form-evaluation\">\n        <input\n          className=\"input-evaluation email-evaluation\"\n          name=\"email\"\n          onChange={ changeHandler }\n          value={ email }\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n        <label className=\"labels\" htmlFor=\"rating\">\n          Nota do Produto:\n          <input\n            className=\"input-evaluation rating-evaluation\"\n            id=\"rating\"\n            onChange={ changeHandler }\n            name=\"evaluationRating\"\n            type=\"number\"\n            value={ rating }\n            min=\"1\"\n            max=\"5\"\n          />\n        </label>\n        <textarea\n          className=\"textarea-evaluation\"\n          data-testid=\"product-detail-evaluation\"\n          name=\"userMessage\"\n          value={ userMessage }\n          placeholder=\"Mensagem(Opcional)\"\n          onChange={ changeHandler }\n        />\n        <button className=\"evaluation-button\" type=\"button\">Avaliar</button>\n      </form>\n    );\n  }\n\n  render() {\n    const { userMessage, email, evaluationRate } = this.state;\n    return (\n      <div className=\"form-evaluation-container\">\n        <h1>Avaliações</h1>\n        {this.renderForm(this.changeHandler, userMessage, email, evaluationRate)}\n      </div>\n    );\n  }\n}\n\nexport default FormRating;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport * as StorageServices from '../services/storageServices';\nimport ProductSpecs from './ProductSpecs';\nimport FormRating from './FormRating';\nimport Header from './Header';\n\nclass ProductDetail extends React.Component {\n  constructor() {\n    super();\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.fetchLocalStorage = this.fetchLocalStorage.bind(this);\n    this.updateValue = this.updateValue.bind(this);\n    this.getStorageItens = this.getStorageItens.bind(this);\n    this.getKartItens = this.getKartItens.bind(this);\n    this.state = {\n      item: {},\n      loading: true,\n      qttItemsKart: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDetails();\n    this.getKartItens();\n  }\n\n  getKartItens() {\n    const qttItemsKart = StorageServices.getStorageKartItens();\n    this.setState({ qttItemsKart });\n  }\n\n  getStorageItens() {\n    const itensStorage = StorageServices.getProductsStorage();\n    return itensStorage;\n  }\n\n  async fetchDetails() {\n    this.setState({ loading: true }, async () => {\n      const {\n        match: {\n          params: { id },\n        },\n      } = this.props;\n      const indexOne = 0;\n      const indexTwo = 8;\n      const name = id.substring(indexOne, indexTwo);\n      const getDetail = await api.getProductsFromCategoryAndQuery('', name);\n      const { title, price, thumbnail } = getDetail.results[0];\n      let { qtt } = getDetail.results[0];\n\n      const itemOnStorage = await this.getStorageItens();\n      if (itemOnStorage !== null) {\n        const checkIsExist = itemOnStorage\n          .find((productId) => productId.thumbnail === thumbnail);\n        if (checkIsExist) qtt = checkIsExist.qtt;\n      }\n\n      const elementSet = {\n        id: getDetail.results[0].id,\n        title,\n        price,\n        thumbnail,\n        qtt,\n      };\n      this.setState({ item: elementSet, loading: false });\n    });\n  }\n\n  updateValue(operator) {\n    const { item } = this.state;\n\n    if (!item.qtt) item.qtt = 1;\n\n    if (operator === 'sub') {\n      const operatorMin = 1;\n      if (item.qtt > operatorMin) item.qtt -= 1;\n      // this.fetchLocalStorage(item);\n      this.setState({ item });\n      // this.getKartItens();\n    } else {\n      item.qtt += 1;\n      // this.fetchLocalStorage(item);\n      this.setState({ item });\n      // this.getKartItens();\n    }\n  }\n\n  async fetchLocalStorage(item) {\n    const { setProductsStorage, updateProductsStorage } = StorageServices;\n    await setProductsStorage(item);\n    await updateProductsStorage(item);\n    await this.getKartItens();\n    await this.setState({ item });\n  }\n\n  render() {\n    const { item, loading, qttItemsKart } = this.state;\n    const { id, title, price, thumbnail } = item;\n    let { qtt } = item;\n    if (!qtt) qtt = 1;\n    return (\n      <div className=\"product-details-container\">\n        <Header qttItemsKart={ qttItemsKart } />\n        <div className=\"product-details\">\n          {loading ? (\n            'Loading...'\n          ) : (\n            <ProductSpecs title={ title } price={ price } thumbnail={ thumbnail } />\n          )}\n          <div>\n            <button\n              type=\"button\"\n              data-testid=\"product-decrease-quantity\"\n              onClick={ () => this.updateValue('sub') }\n            >\n              -\n            </button>\n            <span data-testid=\"shopping-cart-product-quantity\">\n              {`Quantidade: ${qtt}`}\n            </span>\n            <button\n              type=\"button\"\n              data-testid=\"product-increase-quantity\"\n              onClick={ () => this.updateValue('sum') }\n            >\n              +\n            </button>\n            <span>{`Preço: ${price}`}</span>\n          </div>\n          <div>\n            <button\n              className=\"add-cart-button\"\n              data-testid=\"product-detail-add-to-cart\"\n              type=\"submit\"\n              onClick={ () => this\n                .fetchLocalStorage({ id, title, thumbnail, price, qtt }) }\n            >\n              Adicionar ao Carrinho\n            </button>\n          </div>\n        </div>\n        <FormRating />\n      </div>\n    );\n  }\n}\n\nProductDetail.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\nexport default ProductDetail;\n","import React from 'react';\n\nclass PayProductReview extends React.Component {\n  render() {\n    const { kartProducts } = this.props;\n    const zero = 0;\n    const totalValue = kartProducts.map((product) => product.price)\n      .reduce((accumulator, currentValue) => accumulator + currentValue, zero);\n    const productKart = kartProducts.map((product) => (\n      <div key={ product.id }>\n        <img src={ product.thumbnail } alt=\"Imagem do produto\" />\n        <div>{product.title}</div>\n        <div>{product.price}</div>\n      </div>\n    ));\n    return (\n      <div>\n        <h2>Revise seus Produtos</h2>\n        { productKart }\n        <h4>{`Total: R$ ${totalValue}`}</h4>\n      </div>\n    );\n  }\n}\n\nPayProductReview.propTypes = [].isRequired;\n\nexport default PayProductReview;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass BuyerInfo extends React.Component {\n  constructor() {\n    super();\n    this.changeHandler = this.changeHandler.bind(this);\n    this.validInput = this.validInput.bind(this);\n    this.state = {\n      name: '',\n      cpf: '',\n      email: '',\n      phone: '',\n      cep: '',\n      address: '',\n      other: '',\n      number: 0,\n      city: '',\n      stateCountry: '',\n      // payment: '',\n    };\n  }\n\n  validInput() {\n    const { state } = this;\n    const arrayState = Object.entries(state);\n    const numberZero = 0;\n\n    arrayState.forEach((element) => {\n      if (element[0] !== 'payment') {\n        if (element[1] === '' || element[1] === numberZero) {\n          const inputValid = document.getElementById(element[0]);\n          inputValid.style.borderColor = 'red';\n        }\n      }\n    });\n\n    const divForm = document.getElementsByClassName('form')[0];\n    const message = document.createElement('p');\n    message.innerHTML = 'Campo de preenchimento obrigatório';\n    divForm.appendChild(message);\n    return <Redirect to=\"/\" />;\n  }\n\n  changeHandler({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const {\n      name,\n      cpf,\n      email,\n      phone,\n      cep,\n      address,\n      other,\n      number,\n      city,\n      stateCountry,\n    } = this.state;\n    return (\n      <div className=\"form\">\n        <h2>Informações do Comprador</h2>\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"fullname\">\n              <input\n                name=\"name\"\n                id=\"name\"\n                type=\"text\"\n                data-testid=\"checkout-fullname\"\n                placeholder=\"Nome Completo\"\n                value={ name }\n                onChange={ this.changeHandler }\n              />\n            </label>\n            <div>\n              <input\n                name=\"cpf\"\n                id=\"cpf\"\n                type=\"text\"\n                data-testid=\"checkout-email\"\n                placeholder=\"CPF\"\n                value={ cpf }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                data-testid=\"checkout-cpf\"\n                placeholder=\"Email\"\n                value={ email }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"phone\"\n                id=\"phone\"\n                type=\"text\"\n                data-testid=\"checkout-phone\"\n                placeholder=\"Telefone\"\n                value={ phone }\n                onChange={ this.changeHandler }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div>\n              <input\n                name=\"cep\"\n                id=\"cep\"\n                type=\"text\"\n                data-testid=\"checkout-cep\"\n                placeholder=\"CEP\"\n                value={ cep }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"address\"\n                id=\"address\"\n                type=\"text\"\n                data-testid=\"checkout-address\"\n                placeholder=\"Endereço\"\n                value={ address }\n                onChange={ this.changeHandler }\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div>\n              <input\n                name=\"other\"\n                id=\"other\"\n                type=\"text\"\n                placeholder=\"Complemento\"\n                value={ other }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"number\"\n                id=\"number\"\n                type=\"text\"\n                placeholder=\"Número\"\n                value={ number }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"city\"\n                id=\"city\"\n                type=\"email\"\n                placeholder=\"Cidade\"\n                value={ city }\n                onChange={ this.changeHandler }\n              />\n            </div>\n            <div>\n              <input\n                name=\"stateCountry\"\n                id=\"stateCountry\"\n                type=\"select\"\n                placeholder=\"Estado\"\n                value={ stateCountry }\n                onChange={ this.changeHandler }\n              />\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"billet\">\n              Boleto\n              <input\n                name=\"payment\"\n                type=\"radio\"\n                id=\"billet\"\n                value=\"billet\"\n                onChange={ this.changeHandler }\n              />\n            </label>\n            <label htmlFor=\"visa\">\n              Visa\n              <input\n                name=\"payment\"\n                type=\"radio\"\n                id=\"visa\"\n                value=\"visa\"\n                onChange={ this.changeHandler }\n              />\n            </label>\n            <label htmlFor=\"masterCard\">\n              MasterCard\n              <input\n                name=\"payment\"\n                type=\"radio\"\n                id=\"masterCard\"\n                value=\"masterCard\"\n                onChange={ this.changeHandler }\n              />\n            </label>\n            <label htmlFor=\"elo\">\n              Elo\n              <input\n                name=\"payment\"\n                type=\"radio\"\n                id=\"elo\"\n                value=\"elo\"\n                onChange={ this.changeHandler }\n              />\n            </label>\n          </div>\n          <button\n            type=\"button\"\n            onClick={ this.validInput }\n          >\n            Finalizar Compra\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BuyerInfo;\n","import React from 'react';\nimport PayProductReview from './PayProductReview';\nimport BuyerInfo from './BuyerInfo';\nimport * as StorageServices from '../services/storageServices';\n\nclass PayProductList extends React.Component {\n  constructor() {\n    super();\n    this.fetchLocalStorage = this.fetchLocalStorage.bind(this);\n    this.state = {\n      kartProducts: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchLocalStorage();\n  }\n\n  async fetchLocalStorage(item) {\n    const getProductsKart = await StorageServices.getProductsStorage(item);\n    this.setState({ kartProducts: getProductsKart });\n  }\n\n  render() {\n    const { kartProducts } = this.state;\n    return (\n      <div>\n        <PayProductReview kartProducts={ kartProducts } />\n        <BuyerInfo />\n      </div>\n    );\n  }\n}\nexport default PayProductList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\n\nclass ProductList extends React.Component {\n  render() {\n    const { products, getKartItens } = this.props;\n    return (\n      <div className=\"product-list\">\n        {products.map((product) => (\n          <ProductCard\n            key={ product.id }\n            product={ product }\n            getKartItens={ getKartItens }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getKartItens: PropTypes.func.isRequired,\n};\nexport default ProductList;\n","import React from 'react';\n\nimport { SideBar } from './index';\nimport Header from './Header';\nimport ProductList from './ProductList';\n\nimport * as api from '../services/api';\nimport * as storageServices from '../services/storageServices';\n\nclass InitialScreen extends React.Component {\n  constructor() {\n    super();\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchAPI = this.fetchAPI.bind(this);\n    this.onInputSearchChange = this.onInputSearchChange.bind(this);\n    this.buttonSearch = this.buttonSearch.bind(this);\n    this.onChangeCategorySelected = this.onChangeCategorySelected.bind(this);\n    this.getKartItens = this.getKartItens.bind(this);\n    this.state = {\n      searchInput: '',\n      categories: [],\n      products: [],\n      message: 'Digite algum termo de pesquisa ou escolha uma categoria.',\n      categorySelected: '',\n      qttItemsKart: storageServices.getStorageKartItens(),\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAPI();\n  }\n\n  onInputSearchChange({ target }) {\n    this.setState({ searchInput: target.value });\n  }\n\n  onChangeCategorySelected({ target }) {\n    this.setState({ categorySelected: target.id }, () => {\n      this.fetchProducts();\n    });\n  }\n\n  async getKartItens() {\n    const qttItemsKart = await storageServices.getStorageKartItens();\n    await this.setState({ qttItemsKart });\n  }\n\n  buttonSearch() {\n    this.fetchProducts();\n  }\n\n  async fetchProducts() {\n    const { searchInput, categorySelected } = this.state;\n    const dataInputSearch = searchInput;\n\n    const datacategorySelected = categorySelected;\n    const getProducts = await api.getProductsFromCategoryAndQuery(\n      datacategorySelected,\n      dataInputSearch,\n    );\n    this.setState({ products: getProducts.results });\n  }\n\n  async fetchAPI() {\n    const { getCategories } = api;\n\n    this.setState({\n      categories: await getCategories(),\n    });\n  }\n\n  render() {\n    const { message, searchInput, products, categories, qttItemsKart } = this.state;\n    const tagMessage = <h1 data-testid=\"home-initial-message\">{message}</h1>;\n\n    return (\n      <div className=\"initial-screen\">\n        <Header\n          searchInput={ searchInput }\n          onInputSearchChange={ this.onInputSearchChange }\n          buttonSearch={ this.buttonSearch }\n          qttItemsKart={ qttItemsKart }\n        />\n        <div className=\"search-text\">{!searchInput ? tagMessage : ''}</div>\n        <div className=\"initial-screen-body\">\n          <div className=\"side-bar\">\n            <SideBar\n              categories={ categories }\n              onChangeCategorySelected={ this.onChangeCategorySelected }\n            />\n          </div>\n          <ProductList products={ products } getKartItens={ this.getKartItens } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InitialScreen;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Kart, ProductDetail, PayProductList } from './components';\nimport InitialScreen from './components/InitialScreen';\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ InitialScreen } />\n          <Route exact path=\"/kart\" component={ Kart } />\n          <Route exact path=\"/detail/:id\" component={ ProductDetail } />\n          <Route exact path=\"/pay\" component={ PayProductList } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}